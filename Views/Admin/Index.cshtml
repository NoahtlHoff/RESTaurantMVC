@{
    ViewData["Title"] = "Adminpanel";
}

<h1 class="mb-4">Adminpanel</h1>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h5 class="mb-3">Bokningar</h5>

        <form id="form" onsubmit="save(event)" class="p-3 bg-light rounded mb-3">
            <input type="hidden" id="id">
            <div class="row g-2 mb-2">
                <div class="col-md-5">
                    <input type="text" class="form-control" id="name" placeholder="Namn" required>
                </div>
                <div class="col-md-4">
                    <input type="tel" class="form-control" id="phone" placeholder="Telefonnummer">
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-success w-100">Spara</button>
                </div>
            </div>
            <div class="row g-2">
                <div class="col-md-3">
                    <input type="date" class="form-control" id="date" required>
                </div>
                <div class="col-md-2">
                    <input type="time" class="form-control" id="time" required>
                </div>
                <div class="col-md-2">
                    <input type="number" class="form-control" id="size" placeholder="Antal" min="1" value="2" required>
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" id="table" placeholder="Bord">
                </div>
            </div>
        </form>

        <div id="error-message" class="alert alert-danger d-none"></div>

        <table class="table">
            <thead>
                <tr>
                    <th>Datum & Tid</th>
                    <th>Gäst</th>
                    <th>Antal</th>
                    <th>Telefon</th>
                    <th>Bord</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tbody">
                <tr><td colspan="6" class="text-center">Laddar...</td></tr>
            </tbody>
        </table>
    </div>
</div>

<div class="row g-3">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5>Meny</h5>
                <a class="btn btn-primary btn-sm me-2" asp-action="Menu">Visa</a>
                <a class="btn btn-success btn-sm" asp-action="CreateMenuItem">Lägg till</a>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5>Bord</h5>
                <a class="btn btn-primary btn-sm me-2" asp-action="Tables">Visa</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let bookings = [];

        document.addEventListener('DOMContentLoaded', () => {
            setDefaults();
            load();
        });

        function setDefaults() {
            const today = new Date().toISOString().slice(0, 10);
            document.getElementById('date').value = today;

            const now = new Date();
            let hour = now.getHours();
            if (hour < 17) hour = 17;
            if (hour > 21) hour = 17;
            document.getElementById('time').value = `${hour.toString().padStart(2, '0')}:00`;

            document.getElementById('size').value = 2;
        }

        function showError(message) {
            const errorDiv = document.getElementById('error-message');
            errorDiv.textContent = message;
            errorDiv.classList.remove('d-none');
            setTimeout(() => errorDiv.classList.add('d-none'), 5000);
        }

        async function load() {
            const tbody = document.getElementById('tbody');

            try {
                const res = await fetch('/admin/api/bookings');

                if (!res.ok) {
                    let errorMsg = `Fel vid hämtning (${res.status})`;
                    try {
                        const errorData = await res.json();
                        errorMsg = errorData.error || errorMsg;
                    } catch (e) {
                        // Om response inte är JSON
                        const text = await res.text();
                        console.error('Server error:', text);
                    }
                    throw new Error(errorMsg);
                }

                bookings = await res.json();

                if (!bookings || bookings.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="6" class="text-center">Inga bokningar</td></tr>';
                    return;
                }

                tbody.innerHTML = bookings.map(b => `
                    <tr>
                        <td>${b.date} ${b.time?.slice(0,5) || ''}</td>
                        <td>${b.guestName || '-'}</td>
                        <td>${b.partySize || '-'}</td>
                        <td>${b.phone || '-'}</td>
                        <td>${b.tableName || '-'}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary" onclick="edit(${b.id})">Ändra</button>
                            <button class="btn btn-sm btn-outline-danger" onclick="del(${b.id})">Ta bort</button>
                        </td>
                    </tr>
                `).join('');

            } catch (error) {
                console.error('Error loading bookings:', error);
                showError('Kunde inte ladda bokningar: ' + error.message);
                tbody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Kunde inte ladda bokningar. Kontrollera att API:et körs.</td></tr>';
            }
        }

        function edit(id) {
            const b = bookings.find(x => x.id === id);
            if (!b) return;

            document.getElementById('id').value = b.id;
            document.getElementById('name').value = b.guestName || '';
            document.getElementById('date').value = b.date?.slice(0,10) || '';
            document.getElementById('time').value = b.time?.slice(0,5) || '';
            document.getElementById('size').value = b.partySize || 2;
            document.getElementById('phone').value = b.phone || '';
            document.getElementById('table').value = b.tableName || '';
        }

        async function del(id) {
            if (!confirm('Ta bort?')) return;

            try {
                const res = await fetch(`/admin/api/bookings/${id}`, { method: 'DELETE' });

                if (!res.ok) {
                    const errorData = await res.json().catch(() => ({}));
                    throw new Error(errorData.error || 'Kunde inte ta bort bokning');
                }

                await load();
            } catch (error) {
                console.error('Error deleting booking:', error);
                showError('Kunde inte ta bort bokning: ' + error.message);
            }
        }

        async function save(e) {
            e.preventDefault();
            const id = document.getElementById('id').value;

            const bookingData = {
                guestName: document.getElementById('name').value,
                date: document.getElementById('date').value,
                time: document.getElementById('time').value,
                partySize: parseInt(document.getElementById('size').value),
                tableName: document.getElementById('table').value,
                phone: document.getElementById('phone').value
            };

            try {
                const res = await fetch(
                    id ? `/admin/api/bookings/${id}` : '/admin/api/bookings',
                    {
                        method: id ? 'PUT' : 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(bookingData)
                    }
                );

                if (!res.ok) {
                    const errorData = await res.json().catch(() => ({}));
                    throw new Error(errorData.error || 'Kunde inte spara bokning');
                }

                document.getElementById('form').reset();
                document.getElementById('id').value = '';
                setDefaults();
                await load();
            } catch (error) {
                console.error('Error saving booking:', error);
                showError('Kunde inte spara bokning: ' + error.message);
            }
        }
    </script>
}